//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Application.Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCheckedOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveByBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInActiveByBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRentalByToolOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRentalByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBrandByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getToolByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCommentByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRentalByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCommentsByToolOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllBrandsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllRentalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllToolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStaffMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback newBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback newToolOperationCompleted;
        
        private System.Threading.SendOrPostCallback newCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback newRenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback newRentalOperationCompleted;
        
        private System.Threading.SendOrPostCallback returnRentalOperationCompleted;
        
        private System.Threading.SendOrPostCallback editBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback editToolOperationCompleted;
        
        private System.Threading.SendOrPostCallback editCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback editRenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback editRentalOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Application.Properties.Settings.Default.Application_Service_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCheckedOutCompletedEventHandler getCheckedOutCompleted;
        
        /// <remarks/>
        public event getActiveCompletedEventHandler getActiveCompleted;
        
        /// <remarks/>
        public event getActiveByBrandCompletedEventHandler getActiveByBrandCompleted;
        
        /// <remarks/>
        public event getInActiveCompletedEventHandler getInActiveCompleted;
        
        /// <remarks/>
        public event getInActiveByBrandCompletedEventHandler getInActiveByBrandCompleted;
        
        /// <remarks/>
        public event getRentalByToolCompletedEventHandler getRentalByToolCompleted;
        
        /// <remarks/>
        public event getRentalByUserCompletedEventHandler getRentalByUserCompleted;
        
        /// <remarks/>
        public event getBrandByIDCompletedEventHandler getBrandByIDCompleted;
        
        /// <remarks/>
        public event getToolByIDCompletedEventHandler getToolByIDCompleted;
        
        /// <remarks/>
        public event getCommentByIDCompletedEventHandler getCommentByIDCompleted;
        
        /// <remarks/>
        public event getUserByIDCompletedEventHandler getUserByIDCompleted;
        
        /// <remarks/>
        public event getRentalByIDCompletedEventHandler getRentalByIDCompleted;
        
        /// <remarks/>
        public event getCommentsByToolCompletedEventHandler getCommentsByToolCompleted;
        
        /// <remarks/>
        public event getAllBrandsCompletedEventHandler getAllBrandsCompleted;
        
        /// <remarks/>
        public event getAllRentalsCompletedEventHandler getAllRentalsCompleted;
        
        /// <remarks/>
        public event getAllToolsCompletedEventHandler getAllToolsCompleted;
        
        /// <remarks/>
        public event getAllCommentsCompletedEventHandler getAllCommentsCompleted;
        
        /// <remarks/>
        public event getAllUsersCompletedEventHandler getAllUsersCompleted;
        
        /// <remarks/>
        public event createStaffMemberCompletedEventHandler createStaffMemberCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event newBrandCompletedEventHandler newBrandCompleted;
        
        /// <remarks/>
        public event newToolCompletedEventHandler newToolCompleted;
        
        /// <remarks/>
        public event newCommentCompletedEventHandler newCommentCompleted;
        
        /// <remarks/>
        public event newRenterCompletedEventHandler newRenterCompleted;
        
        /// <remarks/>
        public event newRentalCompletedEventHandler newRentalCompleted;
        
        /// <remarks/>
        public event returnRentalCompletedEventHandler returnRentalCompleted;
        
        /// <remarks/>
        public event editBrandCompletedEventHandler editBrandCompleted;
        
        /// <remarks/>
        public event editToolCompletedEventHandler editToolCompleted;
        
        /// <remarks/>
        public event editCommentCompletedEventHandler editCommentCompleted;
        
        /// <remarks/>
        public event editRenterCompletedEventHandler editRenterCompleted;
        
        /// <remarks/>
        public event editRentalCompletedEventHandler editRentalCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCheckedOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RentedTools[] getCheckedOut() {
            object[] results = this.Invoke("getCheckedOut", new object[0]);
            return ((RentedTools[])(results[0]));
        }
        
        /// <remarks/>
        public void getCheckedOutAsync() {
            this.getCheckedOutAsync(null);
        }
        
        /// <remarks/>
        public void getCheckedOutAsync(object userState) {
            if ((this.getCheckedOutOperationCompleted == null)) {
                this.getCheckedOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCheckedOutOperationCompleted);
            }
            this.InvokeAsync("getCheckedOut", new object[0], this.getCheckedOutOperationCompleted, userState);
        }
        
        private void OngetCheckedOutOperationCompleted(object arg) {
            if ((this.getCheckedOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCheckedOutCompleted(this, new getCheckedOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getActive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tools[] getActive() {
            object[] results = this.Invoke("getActive", new object[0]);
            return ((Tools[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveAsync() {
            this.getActiveAsync(null);
        }
        
        /// <remarks/>
        public void getActiveAsync(object userState) {
            if ((this.getActiveOperationCompleted == null)) {
                this.getActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveOperationCompleted);
            }
            this.InvokeAsync("getActive", new object[0], this.getActiveOperationCompleted, userState);
        }
        
        private void OngetActiveOperationCompleted(object arg) {
            if ((this.getActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveCompleted(this, new getActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getActiveByBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tools[] getActiveByBrand(int brand) {
            object[] results = this.Invoke("getActiveByBrand", new object[] {
                        brand});
            return ((Tools[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveByBrandAsync(int brand) {
            this.getActiveByBrandAsync(brand, null);
        }
        
        /// <remarks/>
        public void getActiveByBrandAsync(int brand, object userState) {
            if ((this.getActiveByBrandOperationCompleted == null)) {
                this.getActiveByBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveByBrandOperationCompleted);
            }
            this.InvokeAsync("getActiveByBrand", new object[] {
                        brand}, this.getActiveByBrandOperationCompleted, userState);
        }
        
        private void OngetActiveByBrandOperationCompleted(object arg) {
            if ((this.getActiveByBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveByBrandCompleted(this, new getActiveByBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getInActive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tools[] getInActive() {
            object[] results = this.Invoke("getInActive", new object[0]);
            return ((Tools[])(results[0]));
        }
        
        /// <remarks/>
        public void getInActiveAsync() {
            this.getInActiveAsync(null);
        }
        
        /// <remarks/>
        public void getInActiveAsync(object userState) {
            if ((this.getInActiveOperationCompleted == null)) {
                this.getInActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInActiveOperationCompleted);
            }
            this.InvokeAsync("getInActive", new object[0], this.getInActiveOperationCompleted, userState);
        }
        
        private void OngetInActiveOperationCompleted(object arg) {
            if ((this.getInActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInActiveCompleted(this, new getInActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getInActiveByBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tools[] getInActiveByBrand(int brand) {
            object[] results = this.Invoke("getInActiveByBrand", new object[] {
                        brand});
            return ((Tools[])(results[0]));
        }
        
        /// <remarks/>
        public void getInActiveByBrandAsync(int brand) {
            this.getInActiveByBrandAsync(brand, null);
        }
        
        /// <remarks/>
        public void getInActiveByBrandAsync(int brand, object userState) {
            if ((this.getInActiveByBrandOperationCompleted == null)) {
                this.getInActiveByBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInActiveByBrandOperationCompleted);
            }
            this.InvokeAsync("getInActiveByBrand", new object[] {
                        brand}, this.getInActiveByBrandOperationCompleted, userState);
        }
        
        private void OngetInActiveByBrandOperationCompleted(object arg) {
            if ((this.getInActiveByBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInActiveByBrandCompleted(this, new getInActiveByBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRentalByTool", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rentals[] getRentalByTool(int ToolID) {
            object[] results = this.Invoke("getRentalByTool", new object[] {
                        ToolID});
            return ((Rentals[])(results[0]));
        }
        
        /// <remarks/>
        public void getRentalByToolAsync(int ToolID) {
            this.getRentalByToolAsync(ToolID, null);
        }
        
        /// <remarks/>
        public void getRentalByToolAsync(int ToolID, object userState) {
            if ((this.getRentalByToolOperationCompleted == null)) {
                this.getRentalByToolOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRentalByToolOperationCompleted);
            }
            this.InvokeAsync("getRentalByTool", new object[] {
                        ToolID}, this.getRentalByToolOperationCompleted, userState);
        }
        
        private void OngetRentalByToolOperationCompleted(object arg) {
            if ((this.getRentalByToolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRentalByToolCompleted(this, new getRentalByToolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRentalByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rentals[] getRentalByUser(int UserID) {
            object[] results = this.Invoke("getRentalByUser", new object[] {
                        UserID});
            return ((Rentals[])(results[0]));
        }
        
        /// <remarks/>
        public void getRentalByUserAsync(int UserID) {
            this.getRentalByUserAsync(UserID, null);
        }
        
        /// <remarks/>
        public void getRentalByUserAsync(int UserID, object userState) {
            if ((this.getRentalByUserOperationCompleted == null)) {
                this.getRentalByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRentalByUserOperationCompleted);
            }
            this.InvokeAsync("getRentalByUser", new object[] {
                        UserID}, this.getRentalByUserOperationCompleted, userState);
        }
        
        private void OngetRentalByUserOperationCompleted(object arg) {
            if ((this.getRentalByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRentalByUserCompleted(this, new getRentalByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBrandByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Brands[] getBrandByID(int brandID) {
            object[] results = this.Invoke("getBrandByID", new object[] {
                        brandID});
            return ((Brands[])(results[0]));
        }
        
        /// <remarks/>
        public void getBrandByIDAsync(int brandID) {
            this.getBrandByIDAsync(brandID, null);
        }
        
        /// <remarks/>
        public void getBrandByIDAsync(int brandID, object userState) {
            if ((this.getBrandByIDOperationCompleted == null)) {
                this.getBrandByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBrandByIDOperationCompleted);
            }
            this.InvokeAsync("getBrandByID", new object[] {
                        brandID}, this.getBrandByIDOperationCompleted, userState);
        }
        
        private void OngetBrandByIDOperationCompleted(object arg) {
            if ((this.getBrandByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBrandByIDCompleted(this, new getBrandByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getToolByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tools[] getToolByID(int id) {
            object[] results = this.Invoke("getToolByID", new object[] {
                        id});
            return ((Tools[])(results[0]));
        }
        
        /// <remarks/>
        public void getToolByIDAsync(int id) {
            this.getToolByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void getToolByIDAsync(int id, object userState) {
            if ((this.getToolByIDOperationCompleted == null)) {
                this.getToolByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetToolByIDOperationCompleted);
            }
            this.InvokeAsync("getToolByID", new object[] {
                        id}, this.getToolByIDOperationCompleted, userState);
        }
        
        private void OngetToolByIDOperationCompleted(object arg) {
            if ((this.getToolByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getToolByIDCompleted(this, new getToolByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCommentByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Comments[] getCommentByID(int id) {
            object[] results = this.Invoke("getCommentByID", new object[] {
                        id});
            return ((Comments[])(results[0]));
        }
        
        /// <remarks/>
        public void getCommentByIDAsync(int id) {
            this.getCommentByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void getCommentByIDAsync(int id, object userState) {
            if ((this.getCommentByIDOperationCompleted == null)) {
                this.getCommentByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCommentByIDOperationCompleted);
            }
            this.InvokeAsync("getCommentByID", new object[] {
                        id}, this.getCommentByIDOperationCompleted, userState);
        }
        
        private void OngetCommentByIDOperationCompleted(object arg) {
            if ((this.getCommentByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCommentByIDCompleted(this, new getCommentByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users[] getUserByID(int id) {
            object[] results = this.Invoke("getUserByID", new object[] {
                        id});
            return ((Users[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserByIDAsync(int id) {
            this.getUserByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void getUserByIDAsync(int id, object userState) {
            if ((this.getUserByIDOperationCompleted == null)) {
                this.getUserByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserByIDOperationCompleted);
            }
            this.InvokeAsync("getUserByID", new object[] {
                        id}, this.getUserByIDOperationCompleted, userState);
        }
        
        private void OngetUserByIDOperationCompleted(object arg) {
            if ((this.getUserByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserByIDCompleted(this, new getUserByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRentalByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rentals[] getRentalByID(int id) {
            object[] results = this.Invoke("getRentalByID", new object[] {
                        id});
            return ((Rentals[])(results[0]));
        }
        
        /// <remarks/>
        public void getRentalByIDAsync(int id) {
            this.getRentalByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void getRentalByIDAsync(int id, object userState) {
            if ((this.getRentalByIDOperationCompleted == null)) {
                this.getRentalByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRentalByIDOperationCompleted);
            }
            this.InvokeAsync("getRentalByID", new object[] {
                        id}, this.getRentalByIDOperationCompleted, userState);
        }
        
        private void OngetRentalByIDOperationCompleted(object arg) {
            if ((this.getRentalByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRentalByIDCompleted(this, new getRentalByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCommentsByTool", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Comments[] getCommentsByTool(int ToolID) {
            object[] results = this.Invoke("getCommentsByTool", new object[] {
                        ToolID});
            return ((Comments[])(results[0]));
        }
        
        /// <remarks/>
        public void getCommentsByToolAsync(int ToolID) {
            this.getCommentsByToolAsync(ToolID, null);
        }
        
        /// <remarks/>
        public void getCommentsByToolAsync(int ToolID, object userState) {
            if ((this.getCommentsByToolOperationCompleted == null)) {
                this.getCommentsByToolOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCommentsByToolOperationCompleted);
            }
            this.InvokeAsync("getCommentsByTool", new object[] {
                        ToolID}, this.getCommentsByToolOperationCompleted, userState);
        }
        
        private void OngetCommentsByToolOperationCompleted(object arg) {
            if ((this.getCommentsByToolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCommentsByToolCompleted(this, new getCommentsByToolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllBrands", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Brands[] getAllBrands() {
            object[] results = this.Invoke("getAllBrands", new object[0]);
            return ((Brands[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllBrandsAsync() {
            this.getAllBrandsAsync(null);
        }
        
        /// <remarks/>
        public void getAllBrandsAsync(object userState) {
            if ((this.getAllBrandsOperationCompleted == null)) {
                this.getAllBrandsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllBrandsOperationCompleted);
            }
            this.InvokeAsync("getAllBrands", new object[0], this.getAllBrandsOperationCompleted, userState);
        }
        
        private void OngetAllBrandsOperationCompleted(object arg) {
            if ((this.getAllBrandsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllBrandsCompleted(this, new getAllBrandsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllRentals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rentals[] getAllRentals() {
            object[] results = this.Invoke("getAllRentals", new object[0]);
            return ((Rentals[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllRentalsAsync() {
            this.getAllRentalsAsync(null);
        }
        
        /// <remarks/>
        public void getAllRentalsAsync(object userState) {
            if ((this.getAllRentalsOperationCompleted == null)) {
                this.getAllRentalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRentalsOperationCompleted);
            }
            this.InvokeAsync("getAllRentals", new object[0], this.getAllRentalsOperationCompleted, userState);
        }
        
        private void OngetAllRentalsOperationCompleted(object arg) {
            if ((this.getAllRentalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRentalsCompleted(this, new getAllRentalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllTools", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tools[] getAllTools() {
            object[] results = this.Invoke("getAllTools", new object[0]);
            return ((Tools[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllToolsAsync() {
            this.getAllToolsAsync(null);
        }
        
        /// <remarks/>
        public void getAllToolsAsync(object userState) {
            if ((this.getAllToolsOperationCompleted == null)) {
                this.getAllToolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllToolsOperationCompleted);
            }
            this.InvokeAsync("getAllTools", new object[0], this.getAllToolsOperationCompleted, userState);
        }
        
        private void OngetAllToolsOperationCompleted(object arg) {
            if ((this.getAllToolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllToolsCompleted(this, new getAllToolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Comments[] getAllComments() {
            object[] results = this.Invoke("getAllComments", new object[0]);
            return ((Comments[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllCommentsAsync() {
            this.getAllCommentsAsync(null);
        }
        
        /// <remarks/>
        public void getAllCommentsAsync(object userState) {
            if ((this.getAllCommentsOperationCompleted == null)) {
                this.getAllCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllCommentsOperationCompleted);
            }
            this.InvokeAsync("getAllComments", new object[0], this.getAllCommentsOperationCompleted, userState);
        }
        
        private void OngetAllCommentsOperationCompleted(object arg) {
            if ((this.getAllCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllCommentsCompleted(this, new getAllCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users[] getAllUsers() {
            object[] results = this.Invoke("getAllUsers", new object[0]);
            return ((Users[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllUsersAsync() {
            this.getAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void getAllUsersAsync(object userState) {
            if ((this.getAllUsersOperationCompleted == null)) {
                this.getAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllUsersOperationCompleted);
            }
            this.InvokeAsync("getAllUsers", new object[0], this.getAllUsersOperationCompleted, userState);
        }
        
        private void OngetAllUsersOperationCompleted(object arg) {
            if ((this.getAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllUsersCompleted(this, new getAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createStaffMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createStaffMember(string name, string password) {
            object[] results = this.Invoke("createStaffMember", new object[] {
                        name,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createStaffMemberAsync(string name, string password) {
            this.createStaffMemberAsync(name, password, null);
        }
        
        /// <remarks/>
        public void createStaffMemberAsync(string name, string password, object userState) {
            if ((this.createStaffMemberOperationCompleted == null)) {
                this.createStaffMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStaffMemberOperationCompleted);
            }
            this.InvokeAsync("createStaffMember", new object[] {
                        name,
                        password}, this.createStaffMemberOperationCompleted, userState);
        }
        
        private void OncreateStaffMemberOperationCompleted(object arg) {
            if ((this.createStaffMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStaffMemberCompleted(this, new createStaffMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool login(string password, string name) {
            object[] results = this.Invoke("login", new object[] {
                        password,
                        name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string password, string name) {
            this.loginAsync(password, name, null);
        }
        
        /// <remarks/>
        public void loginAsync(string password, string name, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        password,
                        name}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool newBrand(string name) {
            object[] results = this.Invoke("newBrand", new object[] {
                        name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void newBrandAsync(string name) {
            this.newBrandAsync(name, null);
        }
        
        /// <remarks/>
        public void newBrandAsync(string name, object userState) {
            if ((this.newBrandOperationCompleted == null)) {
                this.newBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewBrandOperationCompleted);
            }
            this.InvokeAsync("newBrand", new object[] {
                        name}, this.newBrandOperationCompleted, userState);
        }
        
        private void OnnewBrandOperationCompleted(object arg) {
            if ((this.newBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newBrandCompleted(this, new newBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newTool", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool newTool(int brandID, string toolname, string tooldescription, bool active) {
            object[] results = this.Invoke("newTool", new object[] {
                        brandID,
                        toolname,
                        tooldescription,
                        active});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void newToolAsync(int brandID, string toolname, string tooldescription, bool active) {
            this.newToolAsync(brandID, toolname, tooldescription, active, null);
        }
        
        /// <remarks/>
        public void newToolAsync(int brandID, string toolname, string tooldescription, bool active, object userState) {
            if ((this.newToolOperationCompleted == null)) {
                this.newToolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewToolOperationCompleted);
            }
            this.InvokeAsync("newTool", new object[] {
                        brandID,
                        toolname,
                        tooldescription,
                        active}, this.newToolOperationCompleted, userState);
        }
        
        private void OnnewToolOperationCompleted(object arg) {
            if ((this.newToolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newToolCompleted(this, new newToolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool newComment(int ToolID, string Comment) {
            object[] results = this.Invoke("newComment", new object[] {
                        ToolID,
                        Comment});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void newCommentAsync(int ToolID, string Comment) {
            this.newCommentAsync(ToolID, Comment, null);
        }
        
        /// <remarks/>
        public void newCommentAsync(int ToolID, string Comment, object userState) {
            if ((this.newCommentOperationCompleted == null)) {
                this.newCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewCommentOperationCompleted);
            }
            this.InvokeAsync("newComment", new object[] {
                        ToolID,
                        Comment}, this.newCommentOperationCompleted, userState);
        }
        
        private void OnnewCommentOperationCompleted(object arg) {
            if ((this.newCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newCommentCompleted(this, new newCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newRenter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool newRenter(string name) {
            object[] results = this.Invoke("newRenter", new object[] {
                        name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void newRenterAsync(string name) {
            this.newRenterAsync(name, null);
        }
        
        /// <remarks/>
        public void newRenterAsync(string name, object userState) {
            if ((this.newRenterOperationCompleted == null)) {
                this.newRenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewRenterOperationCompleted);
            }
            this.InvokeAsync("newRenter", new object[] {
                        name}, this.newRenterOperationCompleted, userState);
        }
        
        private void OnnewRenterOperationCompleted(object arg) {
            if ((this.newRenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newRenterCompleted(this, new newRenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newRental", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool newRental(int toolID, int userID, string rentaldate) {
            object[] results = this.Invoke("newRental", new object[] {
                        toolID,
                        userID,
                        rentaldate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void newRentalAsync(int toolID, int userID, string rentaldate) {
            this.newRentalAsync(toolID, userID, rentaldate, null);
        }
        
        /// <remarks/>
        public void newRentalAsync(int toolID, int userID, string rentaldate, object userState) {
            if ((this.newRentalOperationCompleted == null)) {
                this.newRentalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewRentalOperationCompleted);
            }
            this.InvokeAsync("newRental", new object[] {
                        toolID,
                        userID,
                        rentaldate}, this.newRentalOperationCompleted, userState);
        }
        
        private void OnnewRentalOperationCompleted(object arg) {
            if ((this.newRentalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newRentalCompleted(this, new newRentalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/returnRental", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool returnRental(int rentalID, string datetime) {
            object[] results = this.Invoke("returnRental", new object[] {
                        rentalID,
                        datetime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void returnRentalAsync(int rentalID, string datetime) {
            this.returnRentalAsync(rentalID, datetime, null);
        }
        
        /// <remarks/>
        public void returnRentalAsync(int rentalID, string datetime, object userState) {
            if ((this.returnRentalOperationCompleted == null)) {
                this.returnRentalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreturnRentalOperationCompleted);
            }
            this.InvokeAsync("returnRental", new object[] {
                        rentalID,
                        datetime}, this.returnRentalOperationCompleted, userState);
        }
        
        private void OnreturnRentalOperationCompleted(object arg) {
            if ((this.returnRentalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.returnRentalCompleted(this, new returnRentalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editBrand(int id, string name) {
            this.Invoke("editBrand", new object[] {
                        id,
                        name});
        }
        
        /// <remarks/>
        public void editBrandAsync(int id, string name) {
            this.editBrandAsync(id, name, null);
        }
        
        /// <remarks/>
        public void editBrandAsync(int id, string name, object userState) {
            if ((this.editBrandOperationCompleted == null)) {
                this.editBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditBrandOperationCompleted);
            }
            this.InvokeAsync("editBrand", new object[] {
                        id,
                        name}, this.editBrandOperationCompleted, userState);
        }
        
        private void OneditBrandOperationCompleted(object arg) {
            if ((this.editBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editBrandCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editTool", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editTool(int id, int brandid, string toolname, string tooldescription, bool active) {
            this.Invoke("editTool", new object[] {
                        id,
                        brandid,
                        toolname,
                        tooldescription,
                        active});
        }
        
        /// <remarks/>
        public void editToolAsync(int id, int brandid, string toolname, string tooldescription, bool active) {
            this.editToolAsync(id, brandid, toolname, tooldescription, active, null);
        }
        
        /// <remarks/>
        public void editToolAsync(int id, int brandid, string toolname, string tooldescription, bool active, object userState) {
            if ((this.editToolOperationCompleted == null)) {
                this.editToolOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditToolOperationCompleted);
            }
            this.InvokeAsync("editTool", new object[] {
                        id,
                        brandid,
                        toolname,
                        tooldescription,
                        active}, this.editToolOperationCompleted, userState);
        }
        
        private void OneditToolOperationCompleted(object arg) {
            if ((this.editToolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editToolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editComment(int id, int toolid, string comment) {
            this.Invoke("editComment", new object[] {
                        id,
                        toolid,
                        comment});
        }
        
        /// <remarks/>
        public void editCommentAsync(int id, int toolid, string comment) {
            this.editCommentAsync(id, toolid, comment, null);
        }
        
        /// <remarks/>
        public void editCommentAsync(int id, int toolid, string comment, object userState) {
            if ((this.editCommentOperationCompleted == null)) {
                this.editCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditCommentOperationCompleted);
            }
            this.InvokeAsync("editComment", new object[] {
                        id,
                        toolid,
                        comment}, this.editCommentOperationCompleted, userState);
        }
        
        private void OneditCommentOperationCompleted(object arg) {
            if ((this.editCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editRenter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editRenter(int id, string name) {
            this.Invoke("editRenter", new object[] {
                        id,
                        name});
        }
        
        /// <remarks/>
        public void editRenterAsync(int id, string name) {
            this.editRenterAsync(id, name, null);
        }
        
        /// <remarks/>
        public void editRenterAsync(int id, string name, object userState) {
            if ((this.editRenterOperationCompleted == null)) {
                this.editRenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditRenterOperationCompleted);
            }
            this.InvokeAsync("editRenter", new object[] {
                        id,
                        name}, this.editRenterOperationCompleted, userState);
        }
        
        private void OneditRenterOperationCompleted(object arg) {
            if ((this.editRenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editRenterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editRental", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editRental(int id, int toolid, int userid, string rentaldate, string rentalreturn) {
            this.Invoke("editRental", new object[] {
                        id,
                        toolid,
                        userid,
                        rentaldate,
                        rentalreturn});
        }
        
        /// <remarks/>
        public void editRentalAsync(int id, int toolid, int userid, string rentaldate, string rentalreturn) {
            this.editRentalAsync(id, toolid, userid, rentaldate, rentalreturn, null);
        }
        
        /// <remarks/>
        public void editRentalAsync(int id, int toolid, int userid, string rentaldate, string rentalreturn, object userState) {
            if ((this.editRentalOperationCompleted == null)) {
                this.editRentalOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditRentalOperationCompleted);
            }
            this.InvokeAsync("editRental", new object[] {
                        id,
                        toolid,
                        userid,
                        rentaldate,
                        rentalreturn}, this.editRentalOperationCompleted, userState);
        }
        
        private void OneditRentalOperationCompleted(object arg) {
            if ((this.editRentalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editRentalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RentedTools {
        
        private long toolIDField;
        
        private string descriptionField;
        
        private string brandField;
        
        private System.DateTime rentalDateField;
        
        /// <remarks/>
        public long ToolID {
            get {
                return this.toolIDField;
            }
            set {
                this.toolIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RentalDate {
            get {
                return this.rentalDateField;
            }
            set {
                this.rentalDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Users {
        
        private long userIDField;
        
        private string rentersNameField;
        
        /// <remarks/>
        public long UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string RentersName {
            get {
                return this.rentersNameField;
            }
            set {
                this.rentersNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Comments {
        
        private long commentIDField;
        
        private long toolIDField;
        
        private string commentField;
        
        /// <remarks/>
        public long CommentID {
            get {
                return this.commentIDField;
            }
            set {
                this.commentIDField = value;
            }
        }
        
        /// <remarks/>
        public long ToolID {
            get {
                return this.toolIDField;
            }
            set {
                this.toolIDField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Brands {
        
        private long brandIDField;
        
        private string brandField;
        
        /// <remarks/>
        public long BrandID {
            get {
                return this.brandIDField;
            }
            set {
                this.brandIDField = value;
            }
        }
        
        /// <remarks/>
        public string Brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Rentals {
        
        private long rentalIDField;
        
        private long toolIDField;
        
        private long userIDField;
        
        private string rentersNameField;
        
        private System.DateTime rentalDateField;
        
        private System.DateTime rentalReturnField;
        
        private string toolNameField;
        
        private string toolDescriptionField;
        
        /// <remarks/>
        public long RentalID {
            get {
                return this.rentalIDField;
            }
            set {
                this.rentalIDField = value;
            }
        }
        
        /// <remarks/>
        public long ToolID {
            get {
                return this.toolIDField;
            }
            set {
                this.toolIDField = value;
            }
        }
        
        /// <remarks/>
        public long UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string RentersName {
            get {
                return this.rentersNameField;
            }
            set {
                this.rentersNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RentalDate {
            get {
                return this.rentalDateField;
            }
            set {
                this.rentalDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RentalReturn {
            get {
                return this.rentalReturnField;
            }
            set {
                this.rentalReturnField = value;
            }
        }
        
        /// <remarks/>
        public string ToolName {
            get {
                return this.toolNameField;
            }
            set {
                this.toolNameField = value;
            }
        }
        
        /// <remarks/>
        public string ToolDescription {
            get {
                return this.toolDescriptionField;
            }
            set {
                this.toolDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Tools {
        
        private long toolIDField;
        
        private string toolNameField;
        
        private string toolDescriptionField;
        
        private bool activeField;
        
        private long brandIDField;
        
        private string brandField;
        
        /// <remarks/>
        public long ToolID {
            get {
                return this.toolIDField;
            }
            set {
                this.toolIDField = value;
            }
        }
        
        /// <remarks/>
        public string ToolName {
            get {
                return this.toolNameField;
            }
            set {
                this.toolNameField = value;
            }
        }
        
        /// <remarks/>
        public string ToolDescription {
            get {
                return this.toolDescriptionField;
            }
            set {
                this.toolDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public long BrandID {
            get {
                return this.brandIDField;
            }
            set {
                this.brandIDField = value;
            }
        }
        
        /// <remarks/>
        public string Brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getCheckedOutCompletedEventHandler(object sender, getCheckedOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCheckedOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCheckedOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RentedTools[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RentedTools[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getActiveCompletedEventHandler(object sender, getActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tools[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tools[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getActiveByBrandCompletedEventHandler(object sender, getActiveByBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveByBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveByBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tools[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tools[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getInActiveCompletedEventHandler(object sender, getInActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tools[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tools[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getInActiveByBrandCompletedEventHandler(object sender, getInActiveByBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInActiveByBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInActiveByBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tools[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tools[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getRentalByToolCompletedEventHandler(object sender, getRentalByToolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRentalByToolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRentalByToolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rentals[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rentals[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getRentalByUserCompletedEventHandler(object sender, getRentalByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRentalByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRentalByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rentals[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rentals[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getBrandByIDCompletedEventHandler(object sender, getBrandByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBrandByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBrandByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Brands[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Brands[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getToolByIDCompletedEventHandler(object sender, getToolByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getToolByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getToolByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tools[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tools[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getCommentByIDCompletedEventHandler(object sender, getCommentByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCommentByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCommentByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Comments[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Comments[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getUserByIDCompletedEventHandler(object sender, getUserByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getRentalByIDCompletedEventHandler(object sender, getRentalByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRentalByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRentalByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rentals[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rentals[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getCommentsByToolCompletedEventHandler(object sender, getCommentsByToolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCommentsByToolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCommentsByToolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Comments[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Comments[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getAllBrandsCompletedEventHandler(object sender, getAllBrandsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllBrandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllBrandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Brands[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Brands[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getAllRentalsCompletedEventHandler(object sender, getAllRentalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRentalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRentalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rentals[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rentals[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getAllToolsCompletedEventHandler(object sender, getAllToolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllToolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllToolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tools[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tools[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getAllCommentsCompletedEventHandler(object sender, getAllCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Comments[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Comments[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getAllUsersCompletedEventHandler(object sender, getAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void createStaffMemberCompletedEventHandler(object sender, createStaffMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStaffMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStaffMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void newBrandCompletedEventHandler(object sender, newBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void newToolCompletedEventHandler(object sender, newToolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newToolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newToolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void newCommentCompletedEventHandler(object sender, newCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void newRenterCompletedEventHandler(object sender, newRenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newRenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newRenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void newRentalCompletedEventHandler(object sender, newRentalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newRentalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newRentalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void returnRentalCompletedEventHandler(object sender, returnRentalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class returnRentalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal returnRentalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void editBrandCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void editToolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void editCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void editRenterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void editRentalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591